#Использовать ".."
#Использовать asserts
#Использовать fs
#Использовать tempfiles

Перем юТест;
Перем АдминистрированиеКластера;
Перем ВременныйКаталог;

Процедура Инициализация()
	
	АдминистрированиеКластера = Новый АдминистрированиеКластера;
	Лог = Логирование.ПолучитьЛог("ktb.lib.irac");
	Лог.УстановитьУровень(УровниЛога.Отладка);

КонецПроцедуры

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	юТест = Тестирование;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("ТестДолжен_ПодключитьсяКСерверуАдминистрирования");
	СписокТестов.Добавить("ТестДолжен_ПолучитьСписокКластеров");
	СписокТестов.Добавить("ТестДолжен_ПолучитьСписокСерверовКластера");
	СписокТестов.Добавить("ТестДолжен_ПолучитьСпискоБазНаСервере");

	Возврат СписокТестов;
	
КонецФункции

Процедура ПослеЗапускаТеста() Экспорт

	Если ЗначениеЗаполнено( ВременныйКаталог ) Тогда

		Утверждения.ПроверитьИстину( НайтиФайлы( ВременныйКаталог, "*").Количество() = 0, "Во временном каталоге " + ВременныйКаталог + " не должно остаться файлов" );
	
		ВременныеФайлы.УдалитьФайл( ВременныйКаталог );

		Утверждения.ПроверитьИстину( Не ФС.КаталогСуществует(ВременныйКаталог), "Временный каталог должен быть удален");

		ВременныйКаталог = "";

	КонецЕсли;

КонецПроцедуры

Процедура ТестДолжен_ПодключитьсяКСерверуАдминистрирования() Экспорт
	
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьСписокКластеров() Экспорт
    

КонецПроцедуры

Процедура ТестДолжен_ПолучитьСписокСерверовКластера() Экспорт
	
	
КонецПроцедуры

Процедура ТестДолжен_ПолучитьСпискоБазНаСервере() Экспорт
    
    
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
// Инициализация


Инициализация();
